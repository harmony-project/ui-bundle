{% extends 'KnpMenuBundle::menu.html.twig' %}

{% block list %}
  {% if item.hasChildren and options.depth is not same as(0) and item.displayChildren %}
    {% import 'knp_menu.html.twig' as knp_menu %}

    {% if options.bare is defined and options.bare %}
      {{ block('children') }}
    {% else %}
      {# Add Semantic UI classes to the list element #}
      {%- set classes = listAttributes['class'] is defined ? [listAttributes['class']] : [] %}
      {%- set classes = classes|merge(['menu']) %}
      {%- set classes = ['ui']|merge(classes) %}

      {%- set listAttributes = listAttributes|merge({'class': classes|join(' ')}) %}
      <div{{ knp_menu.attributes(listAttributes) }}>
        {{ block('children') }}
      </div>
    {% endif %}
  {% endif %}
{% endblock %}

{% block item %}
  {% if item.displayed %}
    {# building the class of the item #}
    {%- set classes = item.attribute('class') is not empty ? [item.attribute('class')] : [] %}
    {%- if matcher.isCurrent(item) %}
      {%- set classes = classes|merge([options.currentClass, 'active']) %}
    {%- elseif matcher.isAncestor(item, options.matchingDepth) %}
      {%- set classes = classes|merge([options.ancestorClass]) %}
    {%- endif %}
    {%- if item.actsLikeFirst %}
      {%- set classes = classes|merge([options.firstClass]) %}
    {%- endif %}
    {%- if item.actsLikeLast %}
      {%- set classes = classes|merge([options.lastClass]) %}
    {%- endif %}

    {# Mark item as "leaf" (no children) or as "branch" (has children that are displayed) #}
    {% if item.hasChildren and options.depth is not same as(0) %}
      {% if options.branch_class is not empty and item.displayChildren %}
        {%- set classes = classes|merge([options.branch_class]) %}
      {% endif %}
    {% elseif options.leaf_class is not empty %}
      {%- set classes = classes|merge([options.leaf_class]) %}
    {%- endif %}

    {# Add Semantic UI classes to the item element #}
    {%- set classes = classes|merge(['item']) %}

    {%- set attributes = item.attributes %}
    {%- if classes is not empty %}
      {%- set attributes = attributes|merge({'class': classes|join(' ')}) %}
    {%- endif %}
    {# displaying the item #}
    {% import 'knp_menu.html.twig' as knp_menu %}
    {%- if item.uri is not empty and (not matcher.isCurrent(item) or options.currentAsLink) %}
      {{ block('linkElement') }}
    {%- else %}
      {{ block('spanElement') }}
    {%- endif %}
    {# render the list of children
    {%- set childrenClasses = item.childrenAttribute('class') is not empty ? [item.childrenAttribute('class')] : [] %}
    {%- set childrenClasses = childrenClasses|merge(['menu_level_' ~ item.level]) %}
    {%- set listAttributes = item.childrenAttributes|merge({'class': childrenClasses|join(' ') }) %}
    {{ block('list') }} #}
  {% endif %}
{% endblock %}

{% block linkElement %}
  {% spaceless %}
    {% import 'knp_menu.html.twig' as knp_menu %}
    <a href="{{ item.uri }}"{{ knp_menu.attributes(attributes) }}>{{ block('label') }}</a>
  {% endspaceless %}
{% endblock %}

{% block spanElement %}
  {% spaceless %}
    {% import 'knp_menu.html.twig' as knp_menu %}
    <div{{ knp_menu.attributes(attributes) }}>{{ block('label') }}</div>
  {% endspaceless %}
{% endblock %}
